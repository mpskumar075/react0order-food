{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SAMPAT\\\\Desktop\\\\01-starting-project\\\\src\\\\Store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from 'react';\nimport CartContext from './cart-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedItems = state.items.concat(action.item);\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingCartItem = state.items[existingCartItemIndex];\n    let updatedItemss;\n\n    if (existingCartItem) {\n      const updatedItem = { ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount\n      };\n      updatedItemss = [...state.items];\n      updatedItemss[existingCartItemIndex] = updatedItem;\n    } else {\n      updatedItemss = state.items.concat(action.item);\n    }\n\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    return {\n      items: updatedItemss,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  if (action.typr === 'REMOVE') {\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingItem = state.items(existingCartItemIndex);\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 10\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/Users/SAMPAT/Desktop/01-starting-project/src/Store/CartProvider.js"],"names":["useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedItems","concat","item","existingCartItemIndex","findIndex","id","existingCartItem","updatedItemss","updatedItem","amount","updatedTotalAmount","price","typr","existingItem","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","cartContext","addItem","removeItem","children"],"mappings":"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","sourcesContent":["import { useReducer } from 'react';\r\n\r\nimport CartContext from './cart-context';\r\n\r\nconst defaultCartState ={\r\nitems: [],\r\ntotalAmount: 0\r\n};\r\n\r\nconst cartReducer = (state, action) => {\r\n    if(action.type === 'ADD') {\r\n      const updatedItems = state.items.concat(action.item);\r\n\r\nconst existingCartItemIndex = state.items.findIndex((item) => item.id === action.item.id);\r\nconst existingCartItem = state.items[existingCartItemIndex];\r\nlet updatedItemss;\r\n\r\nif(existingCartItem){\r\n\r\n   const updatedItem = {\r\n        ...existingCartItem, amount: existingCartItem.amount + action.item.amount\r\n    };\r\n    updatedItemss = [...state.items];\r\n    updatedItemss[existingCartItemIndex] = updatedItem;\r\n} else {\r\n    \r\n    updatedItemss = state.items.concat(action.item)\r\n}\r\n\r\n      const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\r\n      return{\r\n          items: updatedItemss,\r\n          totalAmount: updatedTotalAmount\r\n      };\r\n    }\r\nif(action.typr === 'REMOVE'){\r\nconst existingCartItemIndex = state.items.findIndex((item) => item.id === action.item.id);\r\nconst existingItem = state.items(existingCartItemIndex)\r\n}\r\n\r\n    return defaultCartState;\r\n};\r\n\r\nconst CartProvider = (props) => {\r\nconst [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\r\n\r\nconst addItemToCartHandler = (item) => {\r\n    dispatchCartAction({type: 'ADD', item: item});\r\n};\r\n\r\nconst removeItemFromCartHandler = (id) => {\r\n    dispatchCartAction({type: 'REMOVE', id: id});\r\n};\r\n\r\nconst cartContext = {\r\n    items: cartState.items,\r\n    totalAmount: cartState.totalAmount,\r\n    addItem: addItemToCartHandler,\r\n    removeItem: removeItemFromCartHandler,\r\n};\r\n\r\n  return <CartContext.Provider value={cartContext}>\r\n    {props.children}\r\n    </CartContext.Provider>\r\n};\r\n\r\nexport default CartProvider;"]},"metadata":{},"sourceType":"module"}