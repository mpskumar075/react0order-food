{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SAMPAT\\\\Desktop\\\\React-Food-Order\\\\src\\\\components\\\\Cart\\\\Cart.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState } from 'react';\nimport Modal from '../UI/Modal';\nimport CartItem from './CartItem';\nimport classes from './Cart.module.css';\nimport CartContext from '../../Store/cart-context';\nimport Checkout from './Checkout';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cart = props => {\n  _s();\n\n  const [isCheckout, setIsCheckout] = useState(false);\n  const cartCtx = useContext(CartContext);\n  const totalAmount = `Rs${cartCtx.totalAmount.toFixed(2)}`;\n  const hasItems = cartCtx.items.length > 0;\n\n  const cartItemRemoveHandler = id => {\n    cartCtx.removeItem(id);\n  };\n\n  const cartItemAddHandler = item => {\n    cartCtx.addItem({ ...item,\n      amount: 1\n    });\n  };\n\n  const orderHandler = () => {\n    setIsCheckout(true);\n  };\n\n  const submitOrderHandler = userData => {\n    fetch('https://react-http-80741-default-rtdb.firebaseio.com/orders.json', {\n      method: 'POST',\n      body: JSON.stringify({\n        user: userData,\n        orderedItems: cart\n      })\n    });\n  };\n\n  const cartItems = /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: classes['cart-items'],\n    children: cartCtx.items.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n      name: item.name,\n      amount: item.amount,\n      price: item.price,\n      onRemove: cartItemRemoveHandler.bind(null, item.id),\n      onAdd: cartItemAddHandler.bind(null, item)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 88\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 20\n  }, this);\n\n  const modalActions = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.actions,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes['button--alt'],\n      onClick: props.onClose,\n      children: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), hasItems && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes.button,\n      onClick: orderHandler,\n      children: \"Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 4\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: props.onClose,\n    children: [cartItems, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.total,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Total Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: totalAmount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this), isCheckout && /*#__PURE__*/_jsxDEV(Checkout, {\n      onConfirm: submitOrderHandler,\n      onCancel: props.onClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 19\n    }, this), !isCheckout && modalActions]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Cart, \"h+sIjGF0PwOLirwEDh4q+RICsX0=\");\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["C:/Users/SAMPAT/Desktop/React-Food-Order/src/components/Cart/Cart.js"],"names":["useContext","useState","Modal","CartItem","classes","CartContext","Checkout","Cart","props","isCheckout","setIsCheckout","cartCtx","totalAmount","toFixed","hasItems","items","length","cartItemRemoveHandler","id","removeItem","cartItemAddHandler","item","addItem","amount","orderHandler","submitOrderHandler","userData","fetch","method","body","JSON","stringify","user","orderedItems","cart","cartItems","map","name","price","bind","modalActions","actions","onClose","button","total"],"mappings":"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","sourcesContent":["import { useContext, useState } from 'react';\r\n\r\nimport Modal from '../UI/Modal';\r\nimport CartItem from './CartItem';\r\nimport classes from './Cart.module.css';\r\nimport CartContext from '../../Store/cart-context';\r\nimport Checkout from './Checkout';\r\n\r\nconst Cart = (props) => {\r\nconst [isCheckout, setIsCheckout] = useState(false);\r\n\r\nconst cartCtx = useContext(CartContext);\r\n\r\nconst totalAmount = `Rs${cartCtx.totalAmount.toFixed(2)}`;\r\nconst hasItems = cartCtx.items.length > 0;\r\n\r\nconst cartItemRemoveHandler = (id) => {\r\n  cartCtx.removeItem(id);\r\n};\r\n\r\nconst cartItemAddHandler = (item) => {\r\n  cartCtx.addItem({...item, amount:1});\r\n};\r\n\r\nconst orderHandler = () => {\r\n  setIsCheckout(true);\r\n};\r\n\r\nconst submitOrderHandler = (userData) => {\r\n  fetch('https://react-http-80741-default-rtdb.firebaseio.com/orders.json', {\r\n    method: 'POST',\r\n    body: JSON.stringify({\r\n      user: userData,\r\n      orderedItems: cart\r\n    })\r\n  });\r\n};\r\n\r\nconst cartItems = (<ul className={classes['cart-items']}>{cartCtx.items.map((item) => (<CartItem key={item.id} name={item.name} amount={item.amount} price={item.price} onRemove={cartItemRemoveHandler.bind(null, item.id)} onAdd={cartItemAddHandler.bind(null, item)} />))}</ul>);\r\n\r\nconst modalActions =(\r\n   <div className={classes.actions}>\r\n      <button className={classes['button--alt']}onClick={props.onClose} >Close</button>\r\n      {hasItems && (<button className={classes.button} onClick={orderHandler}>Order</button>)}\r\n    </div>\r\n);\r\n\r\n\r\n    return ( \r\n    <Modal onClose={props.onClose}>\r\n    {cartItems}\r\n    <div className={classes.total}>\r\n    <span>Total Amount</span>\r\n    <span>{totalAmount}</span>\r\n    </div>\r\n   {isCheckout && <Checkout onConfirm={submitOrderHandler} onCancel={props.onClose} />}\r\n   {!isCheckout && modalActions }\r\n    \r\n    </Modal>\r\n    );\r\n};\r\n\r\nexport default Cart;"]},"metadata":{},"sourceType":"module"}