{"ast":null,"code":"import _slicedToArray from\"C:/Users/SAMPAT/Desktop/React-Food-Order/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _toConsumableArray from\"C:/Users/SAMPAT/Desktop/React-Food-Order/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"C:/Users/SAMPAT/Desktop/React-Food-Order/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{useReducer}from'react';import CartContext from'./cart-context';import{jsx as _jsx}from\"react/jsx-runtime\";var defaultCartState={items:[],totalAmount:0};var cartReducer=function cartReducer(state,action){if(action.type==='ADD'){var updatedItems=state.items.concat(action.item);var existingCartItemIndex=state.items.findIndex(function(item){return item.id===action.item.id;});var existingCartItem=state.items[existingCartItemIndex];var updatedItemss;if(existingCartItem){var updatedItem=_objectSpread(_objectSpread({},existingCartItem),{},{amount:existingCartItem.amount+action.item.amount});updatedItemss=_toConsumableArray(state.items);updatedItemss[existingCartItemIndex]=updatedItem;}else{updatedItemss=state.items.concat(action.item);}var updatedTotalAmount=state.totalAmount+action.item.price*action.item.amount;return{items:updatedItemss,totalAmount:updatedTotalAmount};}if(action.type==='REMOVE'){var _existingCartItemIndex=state.items.findIndex(function(item){return item.id===action.id;});var existingItem=state.items[_existingCartItemIndex];var _updatedTotalAmount=state.totalAmount-existingItem.price;var _updatedItems;if(existingItem.amount===1){_updatedItems=state.items.filter(function(item){return item.id!==action.id;});}else{var _updatedItem=_objectSpread(_objectSpread({},existingItem),{},{amount:existingItem.amount-1});_updatedItems=_toConsumableArray(state.items);_updatedItems[_existingCartItemIndex]=_updatedItem;}return{items:_updatedItems,totalAmount:_updatedTotalAmount};}if(action.type==='CLEAR'){return defaultCartState;}return defaultCartState;};var CartProvider=function CartProvider(props){var _useReducer=useReducer(cartReducer,defaultCartState),_useReducer2=_slicedToArray(_useReducer,2),cartState=_useReducer2[0],dispatchCartAction=_useReducer2[1];var addItemToCartHandler=function addItemToCartHandler(item){dispatchCartAction({type:'ADD',item:item});};var removeItemFromCartHandler=function removeItemFromCartHandler(id){dispatchCartAction({type:'REMOVE',id:id});};var clearCartHandler=function clearCartHandler(){dispatchCartAction({type:'CLEAR'});};var cartContext={items:cartState.items,totalAmount:cartState.totalAmount,addItem:addItemToCartHandler,removeItem:removeItemFromCartHandler,clearCart:clearCartHandler};return/*#__PURE__*/_jsx(CartContext.Provider,{value:cartContext,children:props.children});};export default CartProvider;","map":{"version":3,"sources":["C:/Users/SAMPAT/Desktop/React-Food-Order/src/Store/CartProvider.js"],"names":["useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedItems","concat","item","existingCartItemIndex","findIndex","id","existingCartItem","updatedItemss","updatedItem","amount","updatedTotalAmount","price","existingItem","filter","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","clearCartHandler","cartContext","addItem","removeItem","clearCart","children"],"mappings":"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","sourcesContent":["import { useReducer } from 'react';\r\n\r\nimport CartContext from './cart-context';\r\n\r\nconst defaultCartState ={\r\nitems: [],\r\ntotalAmount: 0\r\n};\r\n\r\nconst cartReducer = (state, action) => {\r\n    if(action.type === 'ADD') {\r\n      const updatedItems = state.items.concat(action.item);\r\n\r\nconst existingCartItemIndex = state.items.findIndex((item) => item.id === action.item.id);\r\nconst existingCartItem = state.items[existingCartItemIndex];\r\nlet updatedItemss;\r\n\r\nif(existingCartItem){\r\n\r\n   const updatedItem = {\r\n        ...existingCartItem, amount: existingCartItem.amount + action.item.amount\r\n    };\r\n    updatedItemss = [...state.items];\r\n    updatedItemss[existingCartItemIndex] = updatedItem;\r\n} else {\r\n    \r\n    updatedItemss = state.items.concat(action.item)\r\n}\r\n\r\n      const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\r\n      return{\r\n          items: updatedItemss,\r\n          totalAmount: updatedTotalAmount\r\n      };\r\n    }\r\nif(action.type === 'REMOVE'){\r\nconst existingCartItemIndex = state.items.findIndex((item) => item.id === action.id);\r\n\r\nconst existingItem = state.items[existingCartItemIndex];\r\nconst updatedTotalAmount = state.totalAmount - existingItem.price;\r\nlet updatedItems;\r\nif(existingItem.amount === 1){\r\n    updatedItems = state.items.filter(item => item.id !== action.id);\r\n}else{\r\nconst updatedItem = { ...existingItem, amount: existingItem.amount-1};\r\nupdatedItems = [...state.items];\r\nupdatedItems[existingCartItemIndex] = updatedItem;\r\n}\r\nreturn{\r\n    items: updatedItems,\r\n    totalAmount: updatedTotalAmount\r\n};\r\n}\r\n\r\nif(action.type ==='CLEAR') {\r\n    return defaultCartState;\r\n         }\r\n\r\n    return defaultCartState;\r\n};\r\n\r\n\r\n\r\n\r\nconst CartProvider = (props) => {\r\nconst [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\r\n\r\nconst addItemToCartHandler = (item) => {\r\n    dispatchCartAction({type: 'ADD', item: item});\r\n};\r\n\r\nconst removeItemFromCartHandler = (id) => {\r\n    dispatchCartAction({type: 'REMOVE', id: id});\r\n};\r\n\r\nconst clearCartHandler = () =>{\r\n    dispatchCartAction({type: 'CLEAR'});\r\n}\r\n\r\nconst cartContext = {\r\n    items: cartState.items,\r\n    totalAmount: cartState.totalAmount,\r\n    addItem: addItemToCartHandler,\r\n    removeItem: removeItemFromCartHandler,\r\n    clearCart: clearCartHandler\r\n};\r\n\r\n  return <CartContext.Provider value={cartContext}>\r\n    {props.children}\r\n    </CartContext.Provider>\r\n};\r\n\r\nexport default CartProvider;"]},"metadata":{},"sourceType":"module"}