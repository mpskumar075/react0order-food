{"ast":null,"code":"import _slicedToArray from\"C:/Users/SAMPAT/Desktop/React-Food-Order/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useRef,useState}from'react';import classes from'./Checkout.module.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var isEmpty=function isEmpty(value){return value.trim()==='';};var isFiveChars=function isFiveChars(value){return value.trim().length===5;};var Checkout=function Checkout(props){var _useState=useState({name:true,street:true,city:true,pinCode:true}),_useState2=_slicedToArray(_useState,2),formInputValidity=_useState2[0],setFormInputValidity=_useState2[1];var nameInputRef=useRef();var streetInputRef=useRef();var pinCodeInputRef=useRef();var cityInputRef=useRef();var confirmHandler=function confirmHandler(event){event.preventDefault();var enteredName=nameInputRef.current.value;var enteredStreet=streetInputRef.current.value;var enteredPinCode=pinCodeInputRef.current.value;var enteredCity=cityInputRef.current.value;var enteredNameIsValid=!isEmpty(enteredName);var enteredStreetIsValid=!isEmpty(enteredStreet);var enteredCityIsValid=!isEmpty(enteredCity);var enteredPinCodeIsValid=isFiveChars(enteredPinCode);setFormInputValidity({name:enteredNameIsValid,street:enteredStreetIsValid,city:enteredCityIsValid,pinCode:enteredPinCodeIsValid});var formIsValid=enteredNameIsValid&&enteredStreetIsValid&&enteredCityIsValid&&enteredPinCodeIsValid;if(!formIsValid){return;}props.onConfirm({name:enteredName,street:enteredStreet,city:enteredCity,pinCode:enteredPinCode});};var nameControlClasses=\"\".concat(classes.control,\" \").concat(formInputValidity.name?'':classes.invalid);var streetControlClasses=\"\".concat(classes.control,\" \").concat(formInputValidity.street?'':classes.invalid);var pinCodeControlClasses=\"\".concat(classes.control,\" \").concat(formInputValidity.pinCode?'':classes.invalid);var cityControlClasses=\"\".concat(classes.control,\" \").concat(formInputValidity.city?'':classes.invalid);return/*#__PURE__*/_jsxs(\"form\",{className:classes.form,onSubmit:confirmHandler,children:[/*#__PURE__*/_jsxs(\"div\",{className:nameControlClasses,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"name\",children:\"Your Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"name\",ref:nameInputRef}),!formInputValidity.name&&/*#__PURE__*/_jsx(\"p\",{children:\"enter valid name!\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:streetControlClasses,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"street\",children:\"Street\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"street\",ref:streetInputRef}),!formInputValidity.street&&/*#__PURE__*/_jsx(\"p\",{children:\"enter valid street!\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:pinCodeControlClasses,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"pin\",children:\"Pin Code\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"pin\",ref:pinCodeInputRef}),!formInputValidity.pinCode&&/*#__PURE__*/_jsx(\"p\",{children:\"enter valid pinCode!\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:cityControlClasses,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"city\",children:\"City\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"city\",ref:cityInputRef}),!formInputValidity.city&&/*#__PURE__*/_jsx(\"p\",{children:\"enter valid city!\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:classes.actions,children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:props.onCancel,children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{className:classes.submit,children:\"Confirm\"})]})]});};export default Checkout;","map":{"version":3,"sources":["C:/Users/SAMPAT/Desktop/React-Food-Order/src/components/Cart/Checkout.js"],"names":["useRef","useState","classes","isEmpty","value","trim","isFiveChars","length","Checkout","props","name","street","city","pinCode","formInputValidity","setFormInputValidity","nameInputRef","streetInputRef","pinCodeInputRef","cityInputRef","confirmHandler","event","preventDefault","enteredName","current","enteredStreet","enteredPinCode","enteredCity","enteredNameIsValid","enteredStreetIsValid","enteredCityIsValid","enteredPinCodeIsValid","formIsValid","onConfirm","nameControlClasses","control","invalid","streetControlClasses","pinCodeControlClasses","cityControlClasses","form","actions","onCancel","submit"],"mappings":"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","sourcesContent":["import { useRef, useState } from 'react';\r\n\r\nimport classes from './Checkout.module.css';\r\n\r\nconst isEmpty = value => value.trim() === '';\r\nconst isFiveChars = value => value.trim().length === 5;\r\n\r\nconst Checkout = (props) => {\r\nconst [formInputValidity, setFormInputValidity] = useState({\r\n    name: true,\r\n    street: true,\r\n    city: true,\r\n    pinCode: true\r\n});\r\n\r\nconst nameInputRef = useRef();\r\nconst streetInputRef = useRef();\r\nconst pinCodeInputRef = useRef();\r\nconst cityInputRef = useRef();\r\n\r\n  const confirmHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const enteredName = nameInputRef.current.value;\r\n    const enteredStreet = streetInputRef.current.value;\r\n    const enteredPinCode = pinCodeInputRef.current.value;\r\n    const enteredCity = cityInputRef.current.value;\r\n\r\n    const enteredNameIsValid = !isEmpty(enteredName);\r\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\r\n    const enteredCityIsValid = !isEmpty(enteredCity);\r\n    const enteredPinCodeIsValid = isFiveChars(enteredPinCode);\r\n\r\n    setFormInputValidity({\r\n    name: enteredNameIsValid,\r\n    street: enteredStreetIsValid,\r\n    city: enteredCityIsValid,\r\n    pinCode: enteredPinCodeIsValid\r\n    });\r\n\r\n    const formIsValid = enteredNameIsValid && enteredStreetIsValid && enteredCityIsValid && enteredPinCodeIsValid;\r\n\r\n    if (!formIsValid) {\r\n    return;\r\n    }\r\n\r\n    props.onConfirm({\r\n        name: enteredName,\r\n        street: enteredStreet,\r\n        city: enteredCity,\r\n        pinCode: enteredPinCode,\r\n    });\r\n  };\r\n\r\nconst nameControlClasses = `${classes.control} ${formInputValidity.name ? '' : classes.invalid}`;\r\nconst streetControlClasses = `${classes.control} ${formInputValidity.street ? '' : classes.invalid}`;\r\nconst pinCodeControlClasses = `${classes.control} ${formInputValidity.pinCode ? '' : classes.invalid}`;\r\nconst cityControlClasses = `${classes.control} ${formInputValidity.city ? '' : classes.invalid}`;\r\n\r\n\r\n  return (\r\n    <form className={classes.form} onSubmit={confirmHandler}>\r\n      <div className={nameControlClasses}>\r\n        <label htmlFor='name'>Your Name</label>\r\n        <input type='text' id='name'ref={nameInputRef} />\r\n        {!formInputValidity.name && <p>enter valid name!</p>}\r\n      </div>\r\n      <div className={streetControlClasses}>\r\n        <label htmlFor='street'>Street</label>\r\n        <input type='text' id='street' ref={streetInputRef} />\r\n        {!formInputValidity.street && <p>enter valid street!</p>}\r\n      </div>\r\n      <div className={pinCodeControlClasses}>\r\n        <label htmlFor='pin'>Pin Code</label>\r\n        <input type='text' id='pin' ref={pinCodeInputRef} />\r\n        {!formInputValidity.pinCode && <p>enter valid pinCode!</p>}\r\n      </div>\r\n      <div className={cityControlClasses}>\r\n        <label htmlFor='city'>City</label>\r\n        <input type='text' id='city' ref={cityInputRef} />\r\n        {!formInputValidity.city && <p>enter valid city!</p>}\r\n      </div>\r\n      <div className={classes.actions}>\r\n        <button type='button' onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n        <button className={classes.submit}>Confirm</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Checkout;"]},"metadata":{},"sourceType":"module"}